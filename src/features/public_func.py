"""
DO NOT IMPORT BASE_MODULES, OTHER FEATURES OR ROOT MODULES EXCEPT CONTEXT
"""
from src.context import global_context, CallContext
from src.common_modules.request_currency import currency_info
from src.common_modules.drawer import currency_plot, currency_data
from src.common_modules.homiak_diploma import diploma
from src.common_modules.photoshop import add_fleppa_wm
from telebot.types import InlineKeyboardButton


# TODO: !!!!!!!!!!!!–û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö!!!!!!!!


def get_totem(cc: CallContext):
    cc.bot.send_message(cc.chat_id, str(cc.totem), reply_markup=cc.reply_markup)


def feedback(cc: CallContext):
    if cc.current_route.route != cc.base_route:
        cc.logger.i(f'feedback for {cc.message_author} started')
        if cc.database.is_banned(cc.message_author):
            cc.bot.send_message(cc.chat_id, '–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∏–¥–±—ç–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
            return
        cc.database.set_route(cc.message_author, route=cc.base_route)
        cc.bot.send_message(cc.chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Ñ–∏–¥-–±—ç–∫ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞. '
                                        '–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∞–¥–º–∏–Ω—ã –ø–æ—Å–º–æ—Ç—Ä—è—Ç –∏—Ö –∏ –≤–µ—Ä–Ω—É—Ç—Å—è –≤ —á–∞—Ç',
                            reply_markup=cc.reply_markup)
    else:
        for feedback_chat in global_context.FEEDBACK_CHAT_ID:
            res = cc.bot.forward_message(feedback_chat, cc.chat_id, cc.message_id)
            cc.database.save_feedback_origin(
                user_id=cc.message_author,
                origin_message_id=cc.message_id,
                forwarded_message_id=res.message_id
            )
        cc.bot.send_message(cc.chat_id, reply_to_message_id=cc.message_id, text='–§–∏–¥-–±—ç–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∞–º, —Å–ø–∞—Å–∏–±–æ',
                            reply_markup=cc.reply_markup)
        cc.database.set_route(cc.message_author)


def say_welcome(cc: CallContext):
    start_link = cc.splitted_message[1] if len(cc.splitted_message) > 1 else None
    cc.database.save_user(user_id=cc.message_author, involve_link=start_link)
    cc.bot.send_message(cc.chat_id, cc.database.get_start_message(start_link=start_link), reply_markup=cc.reply_markup)


def currency(cc: CallContext):
    currency_tickers = ['USD', 'EUR', 'CNY']
    info = currency_info(currency_tickers)
    result = [f'–ö—É—Ä—Å—ã –æ—Ç {info["trade_day"]} {info["request_time"]} '
              f'(–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫ –∑–∞–∫—Ä—ã—Ç–∏—é {info["trade_date_before"]})', '']
    for i in currency_tickers:
        result.append(info[i]['full_info'])
    cc.reply_markup.add(InlineKeyboardButton(
        text='–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫',
        callback_data=f'/currency_graph?currencies={";".join(currency_tickers)}')
    )
    cc.bot.send_message(cc.chat_id, '\n'.join(result), reply_markup=cc.reply_markup)


def get_diploma(cc: CallContext):
    lastname = cc.user_data.last_name
    if lastname is None:
        lastname = ""
    else:
        lastname = " " + lastname
    cc.bot.send_photo(cc.chat_id, photo=add_fleppa_wm(diploma(cc.user_data.first_name + lastname, cc.totem.totem),
                                                      x=397, y=1584),
                      caption='–ü–æ—Ö–≤–∞—Å—Ç–∞–π—Å—è –¥—Ä—É–∑—å—è–º –¥–∏–ø–ª–æ–º–æ–º –∏ —É–∑–Ω–∞–π, –∫—Ç–æ –æ–Ω–∏ –Ω–∞ –±–∏—Ä–∂–µ üò±', reply_markup=cc.reply_markup)


def currency_graph(cc: CallContext):
    currency_tickers = ['USD', 'EUR']
    for i in currency_tickers:
        curr = currency_data(i)
        cc.bot.send_photo(cc.chat_id, photo=add_fleppa_wm(currency_plot(curr[0], curr[1], i), 100, 50),
                          caption=f'–í–æ—Ç —Ç–µ–±–µ –≥—Ä–∞—Ñ–∏–∫ {i}/RUB')
    cc.bot.send_message(cc.chat_id, '–ï—Å–ª–∏ —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –ª—É—á—à–µ ‚Äî –æ—Å—Ç–∞–≤—å —Å–≤–æ–π –æ—Ç–∑—ã–≤, '
                                    '–≤—ã–∑–≤–∞–≤ –∫–æ–º–∞–Ω–¥—É /feedback', reply_markup=cc.reply_markup)


def menu(cc: CallContext):
    return cc.bot.send_message(cc.chat_id, "–ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–Ω—é—à–∫–∏", reply_markup=cc.reply_markup)

# –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –∏–∑ –¥–≤—É—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# def command_name(cc: CallContext):
#     if cc.current_route.route != cc.base_route:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–º –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã
#         # do smth
#         cc.database.set_route(
#             cc.message_author,
#             route=cc.base_route
#         )  # —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
#     else:
#         # –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ç–æ—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
#         cc.database.set_route(cc.message_author)  # –ù–ï –ó–ê–ë–´–í–ê–ï–ú –û–ë–ù–£–õ–ò–¢–¨ –ü–£–¢–¨


# –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Ç—Ä—ë—Ö –∏ –±–æ–ª–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–π
# def command_name(cc: CallContext):
#     if cc.current_route.route != cc.base_route:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–º –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã
#         # do smth
#         cc.database.set_route(
#             cc.message_author,
#             route=cc.base_route
#         )  # —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
#     else:
#         if cc.current_route.args is None:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —É –ø—É—Ç–∏ –ø–æ–∫–∞ –Ω–µ—Ç
#             # do smth
#             cc.current_route.args = {'arg1': 'some_value'}
#             cc.database.set_route(cc.message_author, str(cc.current_route))
#         else:  # –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç —É –ø—É—Ç–∏ —É–∂–µ –µ—Å—Ç—å
#             # –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–µ—Ç—å–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –¥–µ–ª–∞–µ–º –µ—â–µ –æ–¥–Ω–æ –≤–µ—Ç–≤–ª–µ–Ω–∏–µ
#             cc.database.set_route(cc.message_author)  # –ù–ï –ó–ê–ë–´–í–ê–ï–ú –û–ë–ù–£–õ–ò–¢–¨ –ü–£–¢–¨

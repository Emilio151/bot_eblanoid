name: Deploy to yandex-cloud serverless function to work in production bot

# Этот workflow срабатывает при залитии нового кода в ветку master:
# заливает новый код в production-версию бота с помощью интеграции с YC functions

on:
  push:
    paths:
      - 'src/**'
      - 'requirements.txt'
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Deploy Function
      id: sls-func
      uses: yc-actions/yc-sls-function@v2
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        folder-id: ${{ secrets.FOLDER_ID }}
        function-name: ${{ secrets.FUNCTION_NAME }}
        runtime: 'python39'
        memory: '256Mb'
        entrypoint: 'src.entrypoint.handler'
        environment: |
          BOT_TOKEN = ${{ secrets.BOT_TOKEN }}
          SERVICE_API_KEY = ${{ secrets.SERVICE_API_KEY }}
          SERVICE_STATIC_KEY = ${{ secrets.SERVICE_STATIC_KEY }}
          YDB_DATABASE = ${{ secrets.YDB_DATABASE }}
          YDB_ENDPOINT = ${{ secrets.YDB_ENDPOINT }}
        include: |
          src
          requirements.txt

  register_webhook:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4.4.0
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Register webhook
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_USER_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        WEBHOOK: ${{ secrets.WEBHOOK }}
      run: |
        python -m common.register_webhook
